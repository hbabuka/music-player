@use "sass:map";

// Color palette
// Defining CSS custom properties to be used for switching the theme

// Light theme

:root {
  // Primary color
  --color-primary-main: rgba(254, 81, 89, 1);
  --color-primary-light: rgba(251, 96, 103, 0.22);
  --color-primary-highlight: rgba(251, 96, 103, 0.15);

  // Text colors
  --color-text-primary: rgba(39, 49, 57, 1);
  --color-text-secondary: rgba(71, 97, 110, 1);
  --color-text-tertiary: rgba(119, 146, 160, 1);
  --color-text-invert: rgba(255, 255, 255, 1);

  // Background colors
  --color-background-paper: rgba(255, 255, 255, 1);
  --color-background-elevation: rgba(228, 234, 237, 1);
  --color-background-elevation-2: rgba(239, 246, 249, 1);

  // Neutral colors
  --color-divider-solid: rgba(180, 187, 193, 1);
  --color-divider-transparent: rgba(180, 187, 193, 0.6);

  // Utility colors
  --color-utility-transparent: rgba(255, 255, 255, 0);
  --color-sidebar-inner-shadow: rgba(174, 174, 174, 0.25);
}

// Dark theme

.dark-mode {
  // Primary color
  --color-primary-main: rgba(254, 107, 112, 1);
  --color-primary-light: rgba(210, 84, 89, 0.22);
  --color-primary-highlight: rgba(210, 84, 89, 0.15);

  // Text colors
  --color-text-primary: rgba(239, 246, 249, 1);
  --color-text-secondary: rgba(170, 189, 198, 1);
  --color-text-tertiary: rgba(93, 118, 132, 1);
  --color-text-invert: rgba(16, 25, 32, 1);

  // Background colors
  --color-background-paper: rgba(16, 25, 32, 1);
  --color-background-elevation: rgba(36, 48, 63, 1);
  --color-background-elevation-2: rgba(26, 35, 46, 1);

  // Neutral colors
  --color-divider-solid: rgba(67, 80, 90, 1);
  --color-divider-transparent: rgba(67, 80, 90, 0.4);

  // Utility colors
  --color-utility-transparent: rgba(255, 255, 255, 0);
  --color-sidebar-inner-shadow: rgba(1, 11, 19, 0.6);
}

// Typography

$font-stack: Rubik, Roboto, Arial, sans-serif;

// h1
$font-size-h1: 2.25rem;
$font-weight-h1: 600;
@mixin text-style-h1 {
  font-size: $font-size-h1;
  font-weight: $font-weight-h1;
}

// h2
$font-size-h2: 2rem;
$font-weight-h2: 500;
@mixin text-style-h2 {
  font-size: $font-size-h2;
  font-weight: $font-weight-h2;
}

// h3
$font-size-h3: 1.5rem;
$font-weight-h3: 500;
@mixin text-style-h3 {
  font-size: $font-size-h3;
  font-weight: $font-weight-h3;
}

// h4
$font-size-h4: 1.125rem;
$font-weight-h4: 400;
@mixin text-style-h4 {
  font-size: $font-size-h4;
  font-weight: $font-weight-h4;
}

// h5
$font-size-h5: 1rem;
$font-weight-h5: 400;
@mixin text-style-h5 {
  font-size: $font-size-h5;
  font-weight: $font-weight-h5;
}

// h6
$font-size-h6: 0.875rem;
$font-weight-h6: 500;
$letter-spacing-h6: 0.02em;
@mixin text-style-h6 {
  font-size: $font-size-h6;
  font-weight: $font-weight-h6;
  letter-spacing: $letter-spacing-h6;
  text-transform: uppercase;
}

// Paragraphs
$font-size-p: 1rem;
$font-weight-p: 300;
@mixin text-style-p {
  font-size: $font-size-p;
  font-weight: $font-weight-p;
}

// Paragraphs small
$font-size-p-small: 0.875rem;
$font-weight-p-small: 300;
@mixin text-style-p-small {
  font-size: $font-size-p-small;
  font-weight: $font-weight-p-small;
}

// Spacing

$scaling-factor: 8px;

$spacing-0-5: calc($scaling-factor * 0.5); // 4px
$spacing-1: calc($scaling-factor * 1); // 8px
$spacing-1-5: calc($scaling-factor * 1.5); // 12px
$spacing-2: calc($scaling-factor * 2); // 16px
$spacing-4: calc($scaling-factor * 4); // 32px
$spacing-5: calc($scaling-factor * 5); // 40px
$spacing-8: calc($scaling-factor * 8); // 64px
$spacing-12: calc($scaling-factor * 12); // 96px
$spacing-24: calc($scaling-factor * 24); // 192px

// Component mixins

@mixin header-style {
  height: 6rem;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid var(--color-divider-solid);
  padding: 0 $spacing-4;
}

@mixin text-overflow {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

// Styling constants

$library-width: 25rem;

// Animations

@mixin tranform-scale-on-hover {
  transform: scale(0.95);
}

// Media quereies mixin

$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

@mixin media-query-for($size) {
  @if $size == for-mobile {
    @media screen and (max-width: map.get($breakpoints, sm)) {
      @content;
    }
  } @else if $size == for-tablet-portrait {
    @media screen and (min-width: map.get($breakpoints, md)) {
      @content;
    }
  } @else if $size == for-tablet-landscape {
    @media screen and (min-width: map.get($breakpoints, lg)) {
      @content;
    }
  } @else if $size == for-desktop {
    @media screen and (min-width: map.get($breakpoints, xl)) {
      @content;
    }
  } @else if $size == for-desktop-large {
    @media screen and (min-width: map.get($breakpoints, xxl)) {
      @content;
    }
  }
}
